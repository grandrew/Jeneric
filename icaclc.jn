// icaclc

function main(argv) {
    if(argv.length == 1) {
        // the GFX version
        document.body.innerHTML = 'ICACLC<br/>Graphics mode is unsupported yet.<br/>Try using command mode: icaclc [command] [arg1] [arg2]<button id="but1">OK</button>';
        document.getElementById("but1").waitEvent("click");
        document.body.innerHTML = "exit.";
        // exit
    } else {
        // the console version
        switch ( argv[1] ) {
            case "addacl":
                object.execURI("~/security/ACL", "addACL", [argv[2]]);
                break;
            case "delacl":
                object.execURI("~/security/ACL", "deleteACL", [argv[2]]);
                break;
            case "listacl":
                var r = object.execURI("~/security/ACL", "listACL", []);
                for(var i=0;i<r.length;i++) {
                    printDOM(r[i]); brDOM();
                }
                break;
            case "addid":
                object.execURI("~/security/ACL", "ACLappend", [argv[2], argv[3]]);
                break;
            case "delid":
                object.execURI("~/security/ACL", "ACLremove", [argv[2], argv[3]]);
                break;
            case "listid":
                var r = object.execURI("~/security/ACL", "ACLlist", [argv[2]]);
                for(var i=0;i<r.length;i++) {
                    printDOM(r[i]); brDOM();
                }
                break;
            case "tlset":
                object.execURI("~/security/ACL", "setTrustList", argv.slice(2));
                break;
            case "tlget":
                printDOM(JSON.stringify(object.execURI("~/security/ACL", "getTrustList", [])));
                break;
            case "cflush":
                printDOM(JSON.stringify(object.execURI("~/security/ACL", "flushcache", [])));
                break;
            default:
                printDOM("Avaliable commands: addacl #aclname; delacl #aclname; listacl; addid #aclname terminal_id; delid #aclname terminal_id; listid #aclname; tlset terminal_id ...; tlget; cflush");
        }
    }
}

include("~/lib/iclib");


